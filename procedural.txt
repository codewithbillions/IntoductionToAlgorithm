 /**
 * Task 3
 * 
 * Write a SEARCH procedure (C, STR, VAR FIND,  VAR POS)
 * which searches for a
 * character C in an string STR,  and returns its position
 * if it exists.
 * FIND will be true if the element exist.

 * Write a DELETE procedure (C, STR, VAR  FIND) which
 * deletes the first occurrence
 * of a character  C in a string STR, if it exists.
 * 
 * Write a DELETE_ALL procedure (C, STR) which deletes all
 * occurrences of an element C in a string STR, if it exists.



 */
// Step 1
function inString(searchStr, searchC) {

    let index = searchStr.indexOf(searchC);

    if(index !== -1) return index;
    return;
}


/* Procedure 1 */
function searchProcedure(c, str, find, pos) {
    // Step 1: Search for c in str and return position if exists
    pos = inString(str, c)
    // Step 2: Update find if element exists
    find = Boolean(pos);

    return [find, pos];
}
console.log(searchProcedure("a", "bolajiola"));

/* Procedure 2 */
function deleteProcedure(c, str, find, pos) {
    // Instruction: Deletes the first occurrence of a character 
    // C in a string STR, if it exists.

    // Step 1: Get find from searchProcedure,
    let searchArray = searchProcedure(c, str);
    find = searchArray[0];

    // Step 2: if find is true, delete first occurrence
    let remnants = str;    
    if(find){
        pos = searchArray[1];
        let remnant1 = str.substring(0, pos);
        let remnant2 = str.substring(pos + 1 , str.length);
        remnants = remnant1 + remnant2;
    }

    return remnants;
}
// console.log(deleteProcedure("b", "boljiola"));

/* Procedure 3 */
function deleteAllProcedure(c, str, find, pos) {
//  * Write a DELETE_ALL procedure (C, STR) which deletes all
//     * occurrences of an element C in a string STR, if it exists.
    do {
        find = searchProcedure(c, str)[0];
        if(find) str = deleteProcedure(c, str);
    } while (find);

    return str;
}

// console.log(deleteAllProcedure("b", "bolajiola"));



////////////////////////////////////////////////////////////////////////////////
// Verify the equality of two different values.

	function checkEquality(a, b) {
  	if( a === b) {
		return true
	} else {
		return false
	}
}


// Create a function that takes a number as an argument. Add up all the numbers from 1 to the number you passed to the function.
	function sumTo(n) {
  		let sum = 0;
  		for (let i = 1; i <= n; i++) {
    		sum += i;
  			}
  		return sum;
	}

		alert( sumTo(5) );


// You are counting points for a basketball game, given the amount of 2-pointers scored and 3-pointers scored, find the final points for the team and return that value.


// JavaScript has a logical operator &&. The && operator takes two boolean values, and returns true if both values are true.
------solution
const a = 3;
const b = -2;

function boolea(a, b) {
  if (a > 0 && b > 0) {
	return true;
} else {
	return false
}
}

console.log(a > 0 && b > 0);
// expected output: false


// Write a function to repeat a string on a set number of times.

// solution
let string = 'Student'
let count = 3

console.log(string.repeat(count)); 

// function repeat(string, times) {
  if (times > 0)
    return string.repeat(times);
  else
    return "";
}
repeat("abc", 3);